/*
 * Copyright (C) 2021 Mellanox Technologies, Ltd. ALL RIGHTS RESERVED.
 *
 * This software product is a proprietary product of Mellanox Technologies Ltd.
 * (the "Company") and all right, title, and interest in and to the software
 * product, including all associated intellectual property rights, are and
 * shall remain exclusively with the Company.
 *
 * This software product is governed by the End User License Agreement
 * provided with the software product.
 *
 */

/**
 * @file doca_apsh_attr.h
 * @page apsh_attr
 * @defgroup DOCA_APSH_ATTR APSH Attributes
 *
 * TODO explanation for APSH
 *
 * @{
 */

#ifndef _DOCA_APSH_ATTR__H_
#define _DOCA_APSH_ATTR__H_

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdint.h>
typedef uint64_t addr_t;

// TODO: document

enum doca_apsh_process_attr{
	DOCA_APSH_PROCESS_WINDOWS_PID,
	DOCA_APSH_PROCESS_WINDOWS_PPID,
	DOCA_APSH_PROCESS_WINDOWS_OFFSET,
	DOCA_APSH_PROCESS_WINDOWS_THREADS,
	DOCA_APSH_PROCESS_WINDOWS_HANDLES,
	DOCA_APSH_PROCESS_WINDOWS_CREATE_TIME,
	DOCA_APSH_PROCESS_WINDOWS_EXIT_TIME,
	DOCA_APSH_PROCESS_WINDOWS_IS_WOW_64,
	DOCA_APSH_PROCESS_WINDOWS_IMAGE_FILE_NAME,
	DOCA_APSH_PROCESS_WINDOWS_VIRTUAL_SIZE,
	DOCA_APSH_PROCESS_WINDOWS_PEAK_VIRTUAL_SIZE,
	DOCA_APSH_PROCESS_WINDOWS_PROCESS_EXECUTION_STATE,
	DOCA_APSH_PROCESS_WINDOWS_READ_OPERATION_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_READ_TRANSFER_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_WRITE_OPERATION_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_WRITE_TRANSFER_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_OTHER_OPERATION_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_OTHER_TRANSFER_COUNT,
	DOCA_APSH_PROCESS_WINDOWS_BASE_PRIORITY,
	DOCA_APSH_PROCESS_WINDOWS_AFFINITY,
	DOCA_APSH_PROCESS_WINDOWS_KERNEL_TIME,
	DOCA_APSH_PROCESS_WINDOWS_USER_TIME,
	DOCA_APSH_PROCESS_WINDOWS_CMDLINE,
	DOCA_APSH_PROCESS_LINUX_PID = 1000,
	DOCA_APSH_PROCESS_LINUX_GID,
	DOCA_APSH_PROCESS_LINUX_PPID,
	DOCA_APSH_PROCESS_LINUX_UID,
	DOCA_APSH_PROCESS_LINUX_PGID,
	DOCA_APSH_PROCESS_LINUX_COMM,
	DOCA_APSH_PROCESS_LINUX_STATE,
	DOCA_APSH_PROCESS_LINUX_POLICY,
	DOCA_APSH_PROCESS_LINUX_PRIO,
	DOCA_APSH_PROCESS_LINUX_STATIC_PRIO,
	DOCA_APSH_PROCESS_LINUX_NICE,
	DOCA_APSH_PROCESS_LINUX_START_TIME,
};

typedef int DOCA_APSH_PROCESS_WINDOWS_PID_TYPE;
typedef int DOCA_APSH_PROCESS_WINDOWS_PPID_TYPE;
typedef addr_t DOCA_APSH_PROCESS_WINDOWS_OFFSET_TYPE;
typedef int DOCA_APSH_PROCESS_WINDOWS_THREADS_TYPE;
typedef int DOCA_APSH_PROCESS_WINDOWS_HANDLES_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_CREATE_TIME_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_EXIT_TIME_TYPE;
typedef bool DOCA_APSH_PROCESS_WINDOWS_IS_WOW_64_TYPE;
typedef char* DOCA_APSH_PROCESS_WINDOWS_IMAGE_FILE_NAME_TYPE;
typedef uint32_t DOCA_APSH_PROCESS_WINDOWS_VIRTUAL_SIZE_TYPE;
typedef uint32_t DOCA_APSH_PROCESS_WINDOWS_PEAK_VIRTUAL_SIZE_TYPE;
typedef uint32_t DOCA_APSH_PROCESS_WINDOWS_PROCESS_EXECUTION_STATE_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_READ_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_READ_TRANSFER_COUNT_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_WRITE_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_WRITE_TRANSFER_COUNT_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_OTHER_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_WINDOWS_OTHER_TRANSFER_COUNT_TYPE;
typedef unsigned char DOCA_APSH_PROCESS_WINDOWS_BASE_PRIORITY_TYPE;
typedef unsigned long DOCA_APSH_PROCESS_WINDOWS_AFFINITY_TYPE;
typedef unsigned long DOCA_APSH_PROCESS_WINDOWS_KERNEL_TIME_TYPE;
typedef unsigned long DOCA_APSH_PROCESS_WINDOWS_USER_TIME_TYPE;
typedef char* DOCA_APSH_PROCESS_WINDOWS_CMDLINE_TYPE;
typedef unsigned int DOCA_APSH_PROCESS_LINUX_PID_TYPE;
typedef unsigned int DOCA_APSH_PROCESS_LINUX_GID_TYPE;
typedef unsigned int DOCA_APSH_PROCESS_LINUX_PPID_TYPE;
typedef unsigned int DOCA_APSH_PROCESS_LINUX_PGID_TYPE;
typedef char* DOCA_APSH_PROCESS_LINUX_COMM_TYPE;
typedef long DOCA_APSH_PROCESS_LINUX_STATE_TYPE;
typedef unsigned int DOCA_APSH_PROCESS_LINUX_POLICY_TYPE;
typedef int DOCA_APSH_PROCESS_LINUX_PRIO_TYPE;
typedef int DOCA_APSH_PROCESS_LINUX_STATIC_PRIO_TYPE;
typedef int DOCA_APSH_PROCESS_LINUX_NICE_TYPE;
typedef uint64_t DOCA_APSH_PROCESS_LINUX_START_TIME_TYPE;

enum doca_apsh_thread_attr{
	DOCA_APSH_THREAD_WINDOWS_TID,
	DOCA_APSH_THREAD_WINDOWS_PID,
	DOCA_APSH_THREAD_WINDOWS_WAIT_REASON,
	DOCA_APSH_THREAD_WINDOWS_CREATE_TIME,
	DOCA_APSH_THREAD_WINDOWS_EXIT_TIME,
	DOCA_APSH_THREAD_WINDOWS_OFFSET,
	DOCA_APSH_THREAD_WINDOWS_STATE,
	DOCA_APSH_THREAD_WINDOWS_USER_TIME,
	DOCA_APSH_THREAD_WINDOWS_KERNEL_TIME,
	DOCA_APSH_THREAD_WINDOWS_READ_OPERATION_COUNT,
	DOCA_APSH_THREAD_WINDOWS_READ_TRANSFER_COUNT,
	DOCA_APSH_THREAD_WINDOWS_WRITE_OPERATION_COUNT,
	DOCA_APSH_THREAD_WINDOWS_WRITE_TRANSFER_COUNT,
	DOCA_APSH_THREAD_WINDOWS_OTHER_OPERATION_COUNT,
	DOCA_APSH_THREAD_WINDOWS_OTHER_TRANSFER_COUNT,
	DOCA_APSH_THREAD_LINUX_PID = 1000,
	DOCA_APSH_THREAD_LINUX_TID,
	DOCA_APSH_THREAD_LINUX_PROC_NAME,
	DOCA_APSH_THREAD_LINUX_THREAD_NAME,
	DOCA_APSH_THREAD_LINUX_STATE,
	DOCA_APSH_THREAD_LINUX_POLICY,
	DOCA_APSH_THREAD_LINUX_PRIO,
	DOCA_APSH_THREAD_LINUX_STATIC_PRIO,
	DOCA_APSH_THREAD_LINUX_NICE,
	DOCA_APSH_THREAD_LINUX_START_TIME,
};

typedef int DOCA_APSH_THREAD_WINDOWS_TID_TYPE;
typedef int DOCA_APSH_THREAD_WINDOWS_PID_TYPE;
typedef unsigned char DOCA_APSH_THREAD_WINDOWS_WAIT_REASON_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_CREATE_TIME_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_EXIT_TIME_TYPE;
typedef addr_t DOCA_APSH_THREAD_WINDOWS_OFFSET_TYPE;
typedef unsigned char DOCA_APSH_THREAD_WINDOWS_STATE_TYPE;
typedef unsigned long DOCA_APSH_THREAD_WINDOWS_USER_TIME_TYPE;
typedef unsigned long DOCA_APSH_THREAD_WINDOWS_KERNEL_TIME_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_READ_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_READ_TRANSFER_COUNT_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_WRITE_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_WRITE_TRANSFER_COUNT_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_OTHER_OPERATION_COUNT_TYPE;
typedef uint64_t DOCA_APSH_THREAD_WINDOWS_OTHER_TRANSFER_COUNT_TYPE;
typedef unsigned int DOCA_APSH_THREAD_LINUX_PID_TYPE;
typedef unsigned int DOCA_APSH_THREAD_LINUX_TID_TYPE;
typedef char* DOCA_APSH_THREAD_LINUX_PROC_NAME_TYPE;
typedef char* DOCA_APSH_THREAD_LINUX_THREAD_NAME_TYPE;
typedef long DOCA_APSH_THREAD_LINUX_STATE_TYPE;
typedef unsigned int DOCA_APSH_THREAD_LINUX_POLICY_TYPE;
typedef int DOCA_APSH_THREAD_LINUX_PRIO_TYPE;
typedef int DOCA_APSH_THREAD_LINUX_STATIC_PRIO_TYPE;
typedef int DOCA_APSH_THREAD_LINUX_NICE_TYPE;
typedef uint64_t DOCA_APSH_THREAD_LINUX_START_TIME_TYPE;

enum doca_apsh_lib_attr{
	DOCA_APSH_LIB_WINDOWS_PID,
	DOCA_APSH_LIB_WINDOWS_IMAGE_FILE_NAME,
	DOCA_APSH_LIB_WINDOWS_BASE_DLL_NAME,
	DOCA_APSH_LIB_WINDOWS_FULL_DLL_NAME,
	DOCA_APSH_LIB_WINDOWS_LOAD_TIME,
	DOCA_APSH_LIB_WINDOWS_SIZE_OFIMAGE,
	DOCA_APSH_LIB_LINUX_PID = 1000,
	DOCA_APSH_LIB_LINUX_COMM,
	DOCA_APSH_LIB_LINUX_LOADED_LIBRARY_PATH,
	DOCA_APSH_LIB_LINUX_LOAD_ADRESS,
};

typedef unsigned int DOCA_APSH_LIB_WINDOWS_PID_TYPE;
typedef char* DOCA_APSH_LIB_WINDOWS_IMAGE_FILE_NAME_TYPE;
typedef char* DOCA_APSH_LIB_WINDOWS_BASE_DLL_NAME_TYPE;
typedef char* DOCA_APSH_LIB_WINDOWS_FULL_DLL_NAME_TYPE;
typedef uint64_t DOCA_APSH_LIB_WINDOWS_LOAD_TIME_TYPE;
typedef unsigned long DOCA_APSH_LIB_WINDOWS_SIZE_OFIMAGE_TYPE;
typedef unsigned int DOCA_APSH_LIB_LINUX_PID_TYPE;
typedef char* DOCA_APSH_LIB_LINUX_COMM_TYPE;
typedef char* DOCA_APSH_LIB_LINUX_LOADED_LIBRARY_PATH_TYPE;
typedef uint64_t DOCA_APSH_LIB_LINUX_LOAD_ADRESS_TYPE;

enum doca_apsh_vad_attr{
	DOCA_APSH_VMA_WINDOWS_PID,
	DOCA_APSH_VMA_WINDOWS_IMAGE_FILE_NAME,
	DOCA_APSH_VMA_WINDOWS_OFFSET,
	DOCA_APSH_VMA_WINDOWS_START_VPN,
	DOCA_APSH_VMA_WINDOWS_END_VPN,
	DOCA_APSH_VMA_WINDOWS_COMMIT_CHARGE,
	DOCA_APSH_VMA_WINDOWS_PRIVATE_MEMORY,
	DOCA_APSH_VMA_WINDOWS_FILE,
	DOCA_APSH_VMA_WINDOWS_PROTECTION,
	DOCA_APSH_VMA_WINDOWS_PARENT,
	DOCA_APSH_VMA_LINUX_PID = 1000,
	DOCA_APSH_VMA_LINUX_PROCESS_NAME,
	DOCA_APSH_VMA_LINUX_OFFSET,
	DOCA_APSH_VMA_LINUX_PROTECTION,
	DOCA_APSH_VMA_LINUX_VM_START,
	DOCA_APSH_VMA_LINUX_VM_END,
	DOCA_APSH_VMA_LINUX_FILE_PATH,
};

typedef unsigned int DOCA_APSH_VMA_WINDOWS_PID_TYPE;
typedef char* DOCA_APSH_VMA_WINDOWS_IMAGE_FILE_NAME_TYPE;
typedef addr_t DOCA_APSH_VMA_WINDOWS_OFFSET_TYPE;
typedef addr_t DOCA_APSH_VMA_WINDOWS_START_VPN_TYPE;
typedef addr_t DOCA_APSH_VMA_WINDOWS_END_VPN_TYPE;
typedef int DOCA_APSH_VMA_WINDOWS_COMMIT_CHARGE_TYPE;
typedef int DOCA_APSH_VMA_WINDOWS_PRIVATE_MEMORY_TYPE;
typedef char* DOCA_APSH_VMA_WINDOWS_FILE_TYPE;
typedef char* DOCA_APSH_VMA_WINDOWS_PROTECTION_TYPE;
typedef addr_t DOCA_APSH_VMA_WINDOWS_PARENT_TYPE;
typedef unsigned int DOCA_APSH_VMA_LINUX_PID_TYPE;
typedef char* DOCA_APSH_VMA_LINUX_PROCESS_NAME_TYPE;
typedef addr_t DOCA_APSH_VMA_LINUX_OFFSET_TYPE;
typedef char* DOCA_APSH_VMA_LINUX_PROTECTION_TYPE;
typedef unsigned long DOCA_APSH_VMA_LINUX_VM_START_TYPE;
typedef unsigned long DOCA_APSH_VMA_LINUX_VM_END_TYPE;
typedef char* DOCA_APSH_VMA_LINUX_FILE_PATH_TYPE;

enum doca_apsh_attestation_attr{
	DOCA_APSH_ATTESTATION_WINDOWS_PID,
	DOCA_APSH_ATTESTATION_WINDOWS_COMM,
	DOCA_APSH_ATTESTATION_WINDOWS_PATH_OF_MEMORY_AREA,
	DOCA_APSH_ATTESTATION_WINDOWS_PROTECTION,
	DOCA_APSH_ATTESTATION_WINDOWS_START_ADDRESS,
	DOCA_APSH_ATTESTATION_WINDOWS_END_ADDRESS,
	DOCA_APSH_ATTESTATION_WINDOWS_PAGES_NUMBER,
	DOCA_APSH_ATTESTATION_WINDOWS_PAGES_PRESENT,
	DOCA_APSH_ATTESTATION_WINDOWS_MATCHING_HASHES,
	DOCA_APSH_ATTESTATION_WINDOWS_HASH_DATA_IS_PRESENT,
	DOCA_APSH_ATTESTATION_LINUX_PID = 1000,
	DOCA_APSH_ATTESTATION_LINUX_COMM,
	DOCA_APSH_ATTESTATION_LINUX_PATH_OF_MEMORY_AREA,
	DOCA_APSH_ATTESTATION_LINUX_PROTECTION,
	DOCA_APSH_ATTESTATION_LINUX_START_ADDRESS,
	DOCA_APSH_ATTESTATION_LINUX_END_ADDRESS,
	DOCA_APSH_ATTESTATION_LINUX_PAGES_NUMBER,
	DOCA_APSH_ATTESTATION_LINUX_PAGES_PRESENT,
	DOCA_APSH_ATTESTATION_LINUX_MATCHING_HASHES,
	DOCA_APSH_ATTESTATION_LINUX_HASH_DATA_IS_PRESENT,
};

typedef int DOCA_APSH_ATTESTATION_WINDOWS_PID_TYPE;
typedef char* DOCA_APSH_ATTESTATION_WINDOWS_IMAGE_FILE_NAME_TYPE;
typedef addr_t DOCA_APSH_ATTESTATION_WINDOWS_OFFSET_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_AVAILABLE_PAGES_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_EXECUTABLE_PAGES_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_EXECUTABLE_MATCHES_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_DATA_PAGES_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_DATA_MATCHES_TYPE;
typedef int DOCA_APSH_ATTESTATION_WINDOWS_WRITABLE_PAGAES_TYPE;
typedef bool DOCA_APSH_ATTESTATION_WINDOWS_HASH_DATA_IS_PRESENT_TYPE;
typedef unsigned int DOCA_APSH_ATTESTATION_LINUX_PID_TYPE;
typedef char* DOCA_APSH_ATTESTATION_LINUX_COMM_TYPE;
typedef char* DOCA_APSH_ATTESTATION_LINUX_PATH_OF_MEMORY_AREA_TYPE;
typedef char* DOCA_APSH_ATTESTATION_LINUX_PROTECTION_TYPE;
typedef addr_t DOCA_APSH_ATTESTATION_LINUX_START_ADDRESS_TYPE;
typedef addr_t DOCA_APSH_ATTESTATION_LINUX_END_ADDRESS_TYPE;
typedef int DOCA_APSH_ATTESTATION_LINUX_PAGES_NUMBER_TYPE;
typedef int DOCA_APSH_ATTESTATION_LINUX_PAGES_PRESENT_TYPE;
typedef int DOCA_APSH_ATTESTATION_LINUX_MATCHING_HASHES_TYPE;
typedef bool DOCA_APSH_ATTESTATION_LINUX_HASH_DATA_IS_PRESENT_TYPE;

enum doca_apsh_module_attr{
	DOCA_APSH_MODULES_OFFSET,
	DOCA_APSH_MODULES_NAME,
	DOCA_APSH_MODULES_SIZE,
};

typedef addr_t DOCA_APSH_MODULES_OFFSET_TYPE;
typedef char* DOCA_APSH_MODULES_NAME_TYPE;
typedef uint32_t DOCA_APSH_MODULES_SIZE_TYPE;

#ifdef __cplusplus
}
#endif

/** @} */

#endif
